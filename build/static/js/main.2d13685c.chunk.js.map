{"version":3,"sources":["transitions/slide.module.css","components/contactList/contactListItem/ContactListItem.module.css","components/alert/Alert.module.css","transitions/yes.module.css","components/App.module.css","redux/tasks/tasksActions.js","components/contactForm/ContactForm.js","components/contactList/contactListItem/ContactListItem.js","components/contactList/ContactList.js","components/filter/Filter.js","components/alert/Alert.js","components/App.js","redux/tasks/tasksActionTypes.js","redux/tasks/tasksReducer.js","redux/store.js","index.js"],"names":["module","exports","submitContact","createAction","deleteContact","nameFilter","ContactForm","state","name","number","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","id","uuid","onSubmit","this","type","onChange","pattern","Component","mapDispatchToProps","taskActions","connect","ContactListItem","contact","console","log","className","styles","box","onClick","buttonClass","ContactList","contacts","map","key","Filter","flag","CSSTransition","timeout","in","classNames","slide","unmountOnExit","Alert","active","yes","transition-duration","alert","text","App","inUp","getFilteredContacts","filter","toLowerCase","includes","logo","length","tasks","actions","combineReducers","payload","actionTypes","store","configureStore","reducer","taskReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d13685c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__2PpS5\",\"enterActive\":\"slide_enterActive__2nwZ0\",\"exit\":\"slide_exit__MRDBn\",\"exitActive\":\"slide_exitActive__122U8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"ContactListItem_box__1_eys\",\"contact\":\"ContactListItem_contact__X0TVP\",\"buttonClass\":\"ContactListItem_buttonClass__25M9h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Alert_alert__el7rF\",\"text\":\"Alert_text__25etp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"yes_enter__2ltoi\",\"enterActive\":\"yes_enterActive__2LFQY\",\"exit\":\"yes_exit__JGJfg\",\"exitActive\":\"yes_exitActive__3J-oO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"App_logo___KbTz\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst submitContact = createAction(\"contact/add\");\r\nconst deleteContact = createAction(\"contact/remove\");\r\nconst nameFilter = createAction(\"name/filter\");\r\n\r\nexport default { submitContact, deleteContact, nameFilter };\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport taskActions from \"../../redux/tasks/tasksActions\";\r\nimport { uuid } from \"uuidv4\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.submitContact({\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n      id: uuid()\r\n    });\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <h2>Name</h2>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onChange={this.handleChange}\r\n            value={this.state.name}\r\n          ></input>\r\n          <h2>Number</h2>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\r\n            onChange={this.handleChange}\r\n            value={this.state.number}\r\n          ></input>\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  submitContact: taskActions.submitContact\r\n};\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport styles from \"./ContactListItem.module.css\";\r\n\r\nconst ContactListItem = ({ contact, contact: { name, number, id }, deleteContact }) => {\r\n  console.log('contactttttt', contact)\r\n  return (\r\n    <div className={styles.box}>\r\n      <li className={styles.contact}>\r\n        <span>{name}, </span>\r\n        <span>{number}</span>\r\n        <button onClick={(e) => deleteContact(e.target.id)} type=\"button\" id={id} className={styles.buttonClass}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport ContactListItem from \"./contactListItem/ContactListItem\";\r\n\r\nconst ContactList = ({ contacts = [], deleteContact }) => (\r\n  <>\r\n    <ul>\r\n      {console.log(contacts)}\r\n      {contacts.map(contact => {\r\n        console.log(contact)\r\n        return (\r\n          <ContactListItem\r\n            contact={contact}\r\n            key={contact.id}\r\n            deleteContact={deleteContact}\r\n          />\r\n      )}) }\r\n      </ul>\r\n  </>\r\n);\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport slide from \"../../transitions/slide.module.css\";\r\n\r\nconst Filter = ({ flag, nameFilter }) => (\r\n  <CSSTransition timeout={250} in={flag} classNames={slide} unmountOnExit>\r\n    <div>\r\n      <h2>Find contact by name</h2>\r\n      <input type=\"text\" onChange={(e) => nameFilter(e.target.value)} />\r\n    </div>\r\n  </CSSTransition>\r\n);\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport styles from \"./Alert.module.css\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport yes from '../../transitions/yes.module.css'\r\n\r\n\r\nconst Alert = ({submitContact, active}) => (\r\n  <CSSTransition timeout={250} in={active} classNames={yes} transition-duration={1000} unmountOnExit>\r\n    <div className={styles.alert} onChange={submitContact}>\r\n      <p className={styles.text} >Name already taken!</p>\r\n    </div>\r\n   </CSSTransition>\r\n);\r\n\r\nexport default Alert;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport ContactList from \"./contactList/ContactList\";\r\nimport actions from \"../redux/tasks/tasksActions\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport Filter from \"./filter/Filter\";\r\nimport Alert from './alert/Alert'\r\nimport slide from \"../transitions/slide.module.css\";\r\nimport styles from \"./App.module.css\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    inUp: false\r\n  };\r\n\r\n  getFilteredContacts = () => {\r\n    return this.props.contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(this.props.filter)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    console.log(\"this.props\", this.props);\r\n    return (\r\n      <div>\r\n        <CSSTransition in={this.state.inUp} timeout={500} classNames={slide}>\r\n          <h1 className={styles.logo}>Phonebook</h1>\r\n        </CSSTransition>\r\n        <ContactForm submitContact={this.props.submitContact} />\r\n        <Filter\r\n          flag={this.props.contacts.length > 2 ? true : false}\r\n          nameFilter={this.props.nameFilter}\r\n        />\r\n        <ContactList\r\n          contacts={\r\n            this.props.filter === \"\"\r\n              ? this.props.contacts\r\n              : this.getFilteredContacts()\r\n          }\r\n          deleteContact={this.props.deleteContact}\r\n        />\r\n        <Alert active={this.state.alert ? true : false} submitContact={this.submitContact}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state);\r\n  return { contacts: state.tasks.contacts, filter: state.tasks.filter };\r\n};\r\n\r\nexport default connect(mapStateToProps, { ...actions })(App);\r\n","const ADD = \"contact/add\";\r\nconst DELETE = \"contact/remove\";\r\nconst FILTER = \"name/filter\";\r\n\r\nexport default { ADD, DELETE, FILTER };\r\n","import { combineReducers } from \"redux\";\r\nimport actionTypes from \"./tasksActionTypes\";\r\n\r\nconst contacts = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.ADD:\r\n      console.log('payload', payload)\r\n      return [...state, payload];\r\n\r\n    case actionTypes.DELETE:\r\n        return [...state.filter(contact => contact.id !== payload)]\r\n\r\n    default:\r\n        return state;\r\n  }\r\n};\r\n\r\nconst filter = (state = \"\", {type, payload}) => {\r\n    switch (type) {\r\n        case actionTypes.FILTER:\r\n            return payload\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nconst inUp = (state = false, action) => state;\r\nconst alert = (state = false, action) => state;\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n  inUp,\r\n  alert\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport taskReducer from \"./tasks/tasksReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    tasks: taskReducer\r\n  }\r\n});\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./components/App\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}